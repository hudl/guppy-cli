#!/usr/bin/env node
'use strict';

console.log('hello');
var fs = require('fs');
var path = require('path');
var cwd = process.env.PWD || process.cwd();

// change cwd to hudl webapp directory
var webappDir = fs.readdirSync(cwd).filter(function(file) {
  var regex = /Hudl.(.*).Webapp/g;
  if (file.match(regex) !== null && fs.statSync(path.join(cwd, file)).isDirectory()) {
    process.chdir(path.join(cwd, file));
    cwd = process.cwd();
  }
});

var spawn = require('child_process').spawn;

var path = require('path');
var hookName = process.argv[1].split(path.sep).pop();
var restArgs = process.argv.slice(2).join('\u263a');

process.env.HOOK_ARGS = restArgs;

var gulp = (process.platform === 'win32' ? 'gulp.cmd' : 'gulp');

var hook = spawn(gulp, [hookName], {
  stdio: 'inherit',
  cwd: cwd
});

hook.on('close', function (code) {
  process.exit(code);
});

// catch exceptions so node doesn't exit prematurely, leaving a runaway process
process.on('uncaughtException', function (err) {
  console.error(err.stack);
  hook.kill('SIGHUP');
});
